package MetaModel.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAssociation = createDescriptorForAssociation();
  /*package*/ final ConceptDescriptor myConceptAttributeConnector = createDescriptorForAttributeConnector();
  /*package*/ final ConceptDescriptor myConceptBidirectional = createDescriptorForBidirectional();
  /*package*/ final ConceptDescriptor myConceptClass = createDescriptorForClass();
  /*package*/ final ConceptDescriptor myConceptConnector = createDescriptorForConnector();
  /*package*/ final ConceptDescriptor myConceptConstrainedTargetConnector = createDescriptorForConstrainedTargetConnector();
  /*package*/ final ConceptDescriptor myConceptException = createDescriptorForException();
  /*package*/ final ConceptDescriptor myConceptGeneralisation = createDescriptorForGeneralisation();
  /*package*/ final ConceptDescriptor myConceptManagement = createDescriptorForManagement();
  /*package*/ final ConceptDescriptor myConceptMapConnector = createDescriptorForMapConnector();
  /*package*/ final ConceptDescriptor myConceptOperation = createDescriptorForOperation();
  /*package*/ final ConceptDescriptor myConceptOwnerConnector = createDescriptorForOwnerConnector();
  /*package*/ final ConceptDescriptor myConceptParameter = createDescriptorForParameter();
  /*package*/ final ConceptDescriptor myConceptPrimitiveType = createDescriptorForPrimitiveType();
  /*package*/ final ConceptDescriptor myConceptRelationType = createDescriptorForRelationType();
  /*package*/ final ConceptDescriptor myConceptService = createDescriptorForService();
  /*package*/ final ConceptDescriptor myConceptTargetConnector = createDescriptorForTargetConnector();
  /*package*/ final ConceptDescriptor myConceptType = createDescriptorForType();
  /*package*/ final ConceptDescriptor myConceptTypeAdapter = createDescriptorForTypeAdapter();
  /*package*/ final ConceptDescriptor myConceptUnidirectional = createDescriptorForUnidirectional();
  /*package*/ final EnumerationDescriptor myEnumerationFunctionProperty = new EnumerationDescriptor_FunctionProperty();
  /*package*/ final EnumerationDescriptor myEnumerationMultiplicity = new EnumerationDescriptor_Multiplicity();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAssociation, myConceptAttributeConnector, myConceptBidirectional, myConceptClass, myConceptConnector, myConceptConstrainedTargetConnector, myConceptException, myConceptGeneralisation, myConceptManagement, myConceptMapConnector, myConceptOperation, myConceptOwnerConnector, myConceptParameter, myConceptPrimitiveType, myConceptRelationType, myConceptService, myConceptTargetConnector, myConceptType, myConceptTypeAdapter, myConceptUnidirectional);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Association:
        return myConceptAssociation;
      case LanguageConceptSwitch.AttributeConnector:
        return myConceptAttributeConnector;
      case LanguageConceptSwitch.Bidirectional:
        return myConceptBidirectional;
      case LanguageConceptSwitch.Class:
        return myConceptClass;
      case LanguageConceptSwitch.Connector:
        return myConceptConnector;
      case LanguageConceptSwitch.ConstrainedTargetConnector:
        return myConceptConstrainedTargetConnector;
      case LanguageConceptSwitch.Exception:
        return myConceptException;
      case LanguageConceptSwitch.Generalisation:
        return myConceptGeneralisation;
      case LanguageConceptSwitch.Management:
        return myConceptManagement;
      case LanguageConceptSwitch.MapConnector:
        return myConceptMapConnector;
      case LanguageConceptSwitch.Operation:
        return myConceptOperation;
      case LanguageConceptSwitch.OwnerConnector:
        return myConceptOwnerConnector;
      case LanguageConceptSwitch.Parameter:
        return myConceptParameter;
      case LanguageConceptSwitch.PrimitiveType:
        return myConceptPrimitiveType;
      case LanguageConceptSwitch.RelationType:
        return myConceptRelationType;
      case LanguageConceptSwitch.Service:
        return myConceptService;
      case LanguageConceptSwitch.TargetConnector:
        return myConceptTargetConnector;
      case LanguageConceptSwitch.Type:
        return myConceptType;
      case LanguageConceptSwitch.TypeAdapter:
        return myConceptTypeAdapter;
      case LanguageConceptSwitch.Unidirectional:
        return myConceptUnidirectional;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationFunctionProperty, myEnumerationMultiplicity);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAssociation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "Association", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0f13027L);
    b.class_(false, false, false);
    b.super_("MetaModel.structure.RelationType", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b50L);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/3845874433725116455");
    b.version(2);
    b.property("derived", 0x5b448949fec5dbfcL).type(PrimitiveTypeId.BOOLEAN).origin("6576532306767764476").done();
    b.aggregate("owner", 0x355f4a6bd0f1531dL).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0f13024L).optional(false).ordered(true).multiple(false).origin("3845874433725125405").done();
    b.aggregate("target", 0x355f4a6bd0f15324L).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0f1302fL).optional(false).ordered(true).multiple(false).origin("3845874433725125412").done();
    b.alias("Association");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributeConnector() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "AttributeConnector", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x5b448949fec5dbfeL);
    b.class_(false, false, false);
    b.super_("MetaModel.structure.ConstrainedTargetConnector", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x12a1d358b101f296L);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/6576532306767764478");
    b.version(2);
    b.alias("AttributeConnector");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBidirectional() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "Bidirectional", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x12a1d358b101d595L);
    b.class_(false, false, false);
    b.super_("MetaModel.structure.Management", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0f13024L);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/1342586541813388693");
    b.version(2);
    b.property("domainEndSpecification", 0x12a1d358b101d5a6L).type(MetaIdFactory.dataTypeId(0x9859e7a148764909L, 0xa6648a214c206698L, 0x12a1d358b101d596L)).origin("1342586541813388710").done();
    b.aggregate("connector", 0x12a1d358b101d5a8L).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x12a1d358b101be26L).optional(false).ordered(true).multiple(false).origin("1342586541813388712").done();
    b.alias("Bidirectional");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClass() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "Class", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b2dL);
    b.class_(false, false, false);
    b.super_("MetaModel.structure.Type", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b1cL);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/3845874433725012781");
    b.version(2);
    b.property("singleton", 0x355f4a6bd0ef9b2eL).type(PrimitiveTypeId.BOOLEAN).origin("3845874433725012782").done();
    b.aggregate("attributes", 0x5b448949fec5dc07L).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x5b448949fec5dbfeL).optional(true).ordered(true).multiple(true).origin("6576532306767764487").done();
    b.aggregate("operations", 0x355f4a6bd0ef9b41L).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b30L).optional(true).ordered(true).multiple(true).origin("3845874433725012801").done();
    b.alias("Class");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConnector() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "Connector", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0f1302cL);
    b.class_(false, true, false);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/3845874433725116460");
    b.version(2);
    b.property("role", 0x355f4a6bd0f1302dL).type(PrimitiveTypeId.STRING).origin("3845874433725116461").done();
    b.alias("Connector");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstrainedTargetConnector() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "ConstrainedTargetConnector", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x12a1d358b101f296L);
    b.class_(false, false, false);
    b.super_("MetaModel.structure.TargetConnector", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0f1302fL);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/1342586541813396118");
    b.version(2);
    b.property("constraint", 0x12a1d358b101f2a5L).type(MetaIdFactory.dataTypeId(0x9859e7a148764909L, 0xa6648a214c206698L, 0x12a1d358b101f297L)).origin("1342586541813396133").done();
    b.alias("ConstrainedTargetConnector");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForException() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "Exception", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b43L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/3845874433725012803");
    b.version(2);
    b.property("errorText", 0x355f4a6bd0ef9b46L).type(PrimitiveTypeId.STRING).origin("3845874433725012806").done();
    b.alias("Exception");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGeneralisation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "Generalisation", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0f11480L);
    b.class_(false, false, false);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/3845874433725109376");
    b.version(2);
    b.associate("general", 0x355f4a6bd0f11481L).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b2dL).optional(false).origin("3845874433725109377").done();
    b.associate("specific", 0x355f4a6bd0f11483L).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b2dL).optional(false).origin("3845874433725109379").done();
    b.alias("Generalisation");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForManagement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "Management", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0f13024L);
    b.class_(false, true, false);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/3845874433725116452");
    b.version(2);
    b.alias("Management");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMapConnector() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "MapConnector", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x12a1d358b1020366L);
    b.class_(false, false, false);
    b.super_("MetaModel.structure.TargetConnector", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0f1302fL);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/1342586541813400422");
    b.version(2);
    b.associate("keyType", 0x12a1d358b1020367L).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b1cL).optional(false).origin("1342586541813400423").done();
    b.alias("MapConnector");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "Operation", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b30L);
    b.class_(false, false, false);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/3845874433725012784");
    b.version(2);
    b.property("techName", 0x355f4a6bd0ef9b31L).type(PrimitiveTypeId.STRING).origin("3845874433725012785").done();
    b.property("readableName", 0x355f4a6bd0ef9b33L).type(PrimitiveTypeId.STRING).origin("3845874433725012787").done();
    b.property("documentation", 0x355f4a6bd0ef9b36L).type(PrimitiveTypeId.STRING).origin("3845874433725012790").done();
    b.property("abstrakt", 0x70937844beb7db4eL).type(PrimitiveTypeId.BOOLEAN).origin("8111959590477224782").done();
    b.associate("exception", 0x6ebe179a9dc57d05L).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b43L).optional(true).origin("7979841542586465541").done();
    b.aggregate("formalParameters", 0x355f4a6bd0efbb73L).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0efbb6eL).optional(true).ordered(true).multiple(true).origin("3845874433725021043").done();
    b.aggregate("returnType", 0x1b4ca0733cd2b0bcL).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x1b4ca0733ccbe49aL).optional(true).ordered(true).multiple(false).origin("1967123554056188092").done();
    b.alias("Operation");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOwnerConnector() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "OwnerConnector", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x12a1d358b101be26L);
    b.class_(false, false, false);
    b.super_("MetaModel.structure.Connector", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0f1302cL);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/1342586541813382694");
    b.version(2);
    b.associate("ownerType", 0x12a1d358b101be27L).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b2dL).optional(false).origin("1342586541813382695").done();
    b.alias("OwnerConnector");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "Parameter", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0efbb6eL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/3845874433725021038");
    b.version(2);
    b.aggregate("type", 0x1b4ca0733cd2b0c7L).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x1b4ca0733ccbe49aL).optional(false).ordered(true).multiple(false).origin("1967123554056188103").done();
    b.alias("Parameter");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrimitiveType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "PrimitiveType", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b28L);
    b.class_(false, false, false);
    b.super_("MetaModel.structure.Type", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b1cL);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/3845874433725012776");
    b.version(2);
    b.alias("PrimitiveType");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRelationType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "RelationType", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b50L);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/3845874433725012816");
    b.version(2);
    b.alias("Relation Type");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForService() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "Service", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b51L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/3845874433725012817");
    b.version(2);
    b.aggregate("relationTypes", 0x355f4a6bd0ef9b54L).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b50L).optional(true).ordered(true).multiple(true).origin("3845874433725012820").done();
    b.aggregate("generalisations", 0x355f4a6bd0f11e99L).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0f11480L).optional(true).ordered(true).multiple(true).origin("3845874433725111961").done();
    b.aggregate("exceptions", 0x355f4a6bd0efcad9L).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b43L).optional(true).ordered(true).multiple(true).origin("3845874433725024985").done();
    b.aggregate("operations", 0x5b448949fec5dbf4L).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b30L).optional(true).ordered(true).multiple(true).origin("6576532306767764468").done();
    b.alias("Service");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTargetConnector() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "TargetConnector", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0f1302fL);
    b.class_(false, true, false);
    b.super_("MetaModel.structure.Connector", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0f1302cL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/3845874433725116463");
    b.version(2);
    b.associate("targetType", 0x355f4a6bd0f13030L).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b1cL).optional(false).origin("3845874433725116464").done();
    b.alias("TargetConnector");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "Type", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b1cL);
    b.class_(false, true, false);
    b.super_("MetaModel.structure.RelationType", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b50L);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/3845874433725012764");
    b.version(2);
    b.alias("Type");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeAdapter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "TypeAdapter", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x1b4ca0733ccbe49aL);
    b.class_(false, false, false);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/1967123554055742618");
    b.version(2);
    b.property("isMany", 0x1b4ca0733ce19405L).type(PrimitiveTypeId.BOOLEAN).origin("1967123554057163781").done();
    b.associate("type", 0x1b4ca0733ccbe49dL).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b1cL).optional(false).origin("1967123554055742621").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnidirectional() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaModel", "Unidirectional", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0f1468bL);
    b.class_(false, false, false);
    b.super_("MetaModel.structure.Management", 0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0f13024L);
    b.origin("r:fbcd0e44-58df-4be0-8f6c-750fc6a4ebe5(MetaModel.structure)/3845874433725122187");
    b.version(2);
    b.associate("ownerType", 0x355f4a6bd0f1468cL).target(0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0ef9b2dL).optional(false).origin("3845874433725122188").done();
    b.alias("Unidirectional");
    return b.create();
  }
}
