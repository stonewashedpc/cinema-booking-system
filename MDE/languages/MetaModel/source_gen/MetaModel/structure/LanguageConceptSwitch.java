package MetaModel.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Association = 0;
  public static final int AttributeConnector = 1;
  public static final int Bidirectional = 2;
  public static final int Class = 3;
  public static final int Connector = 4;
  public static final int ConstrainedTargetConnector = 5;
  public static final int Exception = 6;
  public static final int Generalisation = 7;
  public static final int Management = 8;
  public static final int MapConnector = 9;
  public static final int Operation = 10;
  public static final int OwnerConnector = 11;
  public static final int Parameter = 12;
  public static final int PrimitiveType = 13;
  public static final int RelationType = 14;
  public static final int Service = 15;
  public static final int TargetConnector = 16;
  public static final int Type = 17;
  public static final int TypeAdapter = 18;
  public static final int Unidirectional = 19;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x9859e7a148764909L, 0xa6648a214c206698L);
    builder.put(0x355f4a6bd0f13027L, Association);
    builder.put(0x5b448949fec5dbfeL, AttributeConnector);
    builder.put(0x12a1d358b101d595L, Bidirectional);
    builder.put(0x355f4a6bd0ef9b2dL, Class);
    builder.put(0x355f4a6bd0f1302cL, Connector);
    builder.put(0x12a1d358b101f296L, ConstrainedTargetConnector);
    builder.put(0x355f4a6bd0ef9b43L, Exception);
    builder.put(0x355f4a6bd0f11480L, Generalisation);
    builder.put(0x355f4a6bd0f13024L, Management);
    builder.put(0x12a1d358b1020366L, MapConnector);
    builder.put(0x355f4a6bd0ef9b30L, Operation);
    builder.put(0x12a1d358b101be26L, OwnerConnector);
    builder.put(0x355f4a6bd0efbb6eL, Parameter);
    builder.put(0x355f4a6bd0ef9b28L, PrimitiveType);
    builder.put(0x355f4a6bd0ef9b50L, RelationType);
    builder.put(0x355f4a6bd0ef9b51L, Service);
    builder.put(0x355f4a6bd0f1302fL, TargetConnector);
    builder.put(0x355f4a6bd0ef9b1cL, Type);
    builder.put(0x1b4ca0733ccbe49aL, TypeAdapter);
    builder.put(0x355f4a6bd0f1468bL, Unidirectional);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
